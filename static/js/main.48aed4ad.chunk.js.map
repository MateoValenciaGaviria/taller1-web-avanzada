{"version":3,"sources":["components/MapTerrain/MapTerrain.tsx","containers/Display/Display.tsx","utils/getImageSrcFromType.tsx","components/Matrix/Matrix.tsx","components/Map/Map.tsx","components/Boss/Boss.tsx","components/ElementFeatures/ElementFeatures.tsx","components/Elements/Elements.tsx","containers/Settings/Settings.tsx","containers/App/App.tsx","fonts/pixeldigivolve/pixeldigivolve.otf","index.tsx"],"names":["MapTerrain","rows","columns","index","type","visibility","potion","sword","shield","boss","iconSrc","bossType","player","color2","grass1Src","dirt1Src","grass2Src","dirt2Src","motion","div","initial","scale","animate","exit","transition","ease","duration","className","src","alt","Display","terrains","style","gridTemplateColumns","gridTemplateRows","map","baseExtension","process","getImageSrcFromType","color","Matrix","onMatrixClick","buttons","i","newButton","push","currentValue","onClick","value","Map","mapType","onRowsDecrease","onRowsIncrease","onColumnDecrease","onColumnIncrease","onMatrixChange","onVisibilityChange","onTerrainTypeChange","button","whileHover","whileTap","onChange","Boss","bossColor","onBossVisibilityChange","ElementFeatures","onElementVisibilityChange","Elements","onPotionVisibilityChange","onShieldVisibilityChange","onSwordVisibilityChange","potionimageSrc","shieldimageSrc","swordimageSrc","React","useState","activeLink","setactiveLink","to","from","exact","path","render","Settings","opacity","initialMap","App","setRows","setColumns","setTerrains","globalTerrainType","setglobalTerrainType","handleOnMatrixChange","temporalTerrain","indexTerrain","newTerrain","handleIconChange","findIndex","terrain","currentMap","slice","j","length","useEffect","AnimatePresence","exitBeforeEnter","basename","numberType","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48aed4ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport { motion } from \"framer-motion\"\r\nimport { getImageSrcFromType } from '../../utils/getImageSrcFromType';\r\nimport './MapTerrain.css';\r\n\r\ninterface MapTerrainProps{\r\n    rows: number,\r\n    columns: number,\r\n    index: number,\r\n    type: number,\r\n    visibility: boolean,\r\n    potion: boolean,\r\n    sword: boolean,\r\n    shield: boolean,\r\n    boss: boolean,\r\n    bossType: number,\r\n    player: boolean,\r\n    iconSrc: string,\r\n}\r\n\r\nexport const MapTerrain: React.FC<MapTerrainProps> = ({ rows, columns, index, type, visibility, potion, sword, shield, boss, bossType, player, iconSrc }) => {\r\n\r\n    var color2 = false;\r\n    var grass1Src = \"./images/file_extensions/terrain/greengrass1.png\";\r\n    var dirt1Src = \"./images/file_extensions/terrain/greendirt1.png\";\r\n\r\n    var grass2Src = \"./images/file_extensions/terrain/greengrass2.png\";\r\n    var dirt2Src = \"./images/file_extensions/terrain/greendirt2.png\";\r\n    \r\n    switch (type) {\r\n        case 0:\r\n            grass1Src = \"./images/file_extensions/terrain/greengrass1.png\";\r\n            dirt1Src = \"./images/file_extensions/terrain/greendirt1.png\";\r\n            grass2Src = \"./images/file_extensions/terrain/greengrass2.png\";\r\n            dirt2Src = \"./images/file_extensions/terrain/greendirt2.png\";\r\n            break;\r\n        case 1:\r\n            grass1Src = \"./images/file_extensions/terrain/bluegrass1.png\";\r\n            dirt1Src = \"./images/file_extensions/terrain/bluedirt1.png\";\r\n            grass2Src = \"./images/file_extensions/terrain/bluegrass2.png\";\r\n            dirt2Src = \"./images/file_extensions/terrain/bluedirt2.png\";\r\n            break;    \r\n        case 2:\r\n            grass1Src = \"./images/file_extensions/terrain/redgrass1.png\";\r\n            dirt1Src = \"./images/file_extensions/terrain/reddirt1.png\";\r\n            grass2Src = \"./images/file_extensions/terrain/redgrass2.png\";\r\n            dirt2Src = \"./images/file_extensions/terrain/reddirt2.png\";\r\n            break;\r\n        case 3:\r\n            grass1Src = \"./images/file_extensions/terrain/pinkgrass1.png\";\r\n            dirt1Src = \"./images/file_extensions/terrain/pinkdirt1.png\";\r\n            grass2Src = \"./images/file_extensions/terrain/pinkgrass2.png\";\r\n            dirt2Src = \"./images/file_extensions/terrain/pinkdirt2.png\";\r\n            break;   \r\n    }\r\n    \r\n    if((columns % 2) == 0){\r\n\r\n        if (index >= columns && index < columns*2) {\r\n            index++;\r\n        }\r\n\r\n        if (index >= columns*3 && index < columns*4) {\r\n            index++;\r\n        }\r\n\r\n        if (index >= columns*5 && index < columns*6) {\r\n            index++;\r\n        } \r\n    }\r\n    \r\n    if((index % 2) == 0){\r\n        color2 = true;\r\n    }\r\n\r\n    return(\r\n    <div>\r\n        <motion.div\r\n        initial={{scale: 0}}\r\n        animate={{scale: 1}}\r\n        exit={{scale: 0}}\r\n        transition={{ ease: \"easeInOut\", duration: 0.3 }} \r\n        className={`${visibility && (color2 ? 'terrainStyle1' : 'terrainNone')}`}>\r\n            <img className='terrainBg' src = {grass1Src} />\r\n            <div className={`${(visibility && (boss || potion || shield || sword )) && (boss) ? 'elementBossContainer' : 'elementContainer'}`}>\r\n                <img className={`${(visibility && (boss || potion || shield || sword )) && 'imgIconContainer'}`} src={iconSrc} alt=\"\"/>\r\n            </div>\r\n            <div className={`${(visibility ? 'dirtContainer1': 'terrainNone')}`}>\r\n                <img className='dirtBg' src = {dirt1Src} />\r\n            </div>\r\n        </motion.div>\r\n        <motion.div\r\n        initial={{scale: 0}}\r\n        animate={{scale: 1}}\r\n        exit={{scale: 0}}\r\n        transition={{ ease: \"easeInOut\", duration: 0.3 }} \r\n        className={`${visibility && (!color2 ? 'terrainStyle2' : 'terrainNone')}`}>\r\n            <img className='terrainBg' src = {grass2Src}  />\r\n            <div className={`${(visibility && (boss || potion || shield || sword )) && (boss) ? 'elementBossContainer' : 'elementContainer'}`}>\r\n                <img className={`${(visibility && (boss || potion || shield || sword )) && 'imgIconContainer'}`} src={iconSrc} alt=\"\"/>\r\n            </div>\r\n            <div className={`${(visibility ? 'dirtContainer2': 'terrainNone')}`}>\r\n                <img className='dirtBg' src = {dirt2Src} />\r\n            </div>\r\n        </motion.div>\r\n    </div>);\r\n\r\n}","import React from 'react';\r\nimport { MapTerrain } from '../../components/MapTerrain/MapTerrain';\r\nimport { TerrainType } from '../../utils/TerrainType';\r\nimport './Display.css'\r\n\r\n{/*const initial = [\r\n    {\r\n        index: 0,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 1,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 2,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 3,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 4,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 5,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 6,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 7,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 8,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 9,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 10,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 11,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 12,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 13,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 14,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 15,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 16,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 17,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 18,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 19,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 20,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 21,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 0,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 1,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 2,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 3,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 4,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 5,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 6,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 7,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 8,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 9,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 10,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 11,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 12,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 13,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 14,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 15,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 16,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 17,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 18,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 19,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 20,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 21,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 0,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 1,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 2,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 3,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 4,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 5,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 6,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 7,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 8,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 9,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 10,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 11,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 12,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 13,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 14,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 15,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 16,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 17,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 18,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 19,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 20,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n    {\r\n        index: 21,\r\n        type: '',\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n    },\r\n]*/}\r\n\r\ninterface DisplayProps{\r\n    rows: number,\r\n    columns: number,\r\n    terrains: TerrainType[],\r\n}\r\n\r\nexport const Display: React.FC<DisplayProps> = ( {rows, columns, terrains} ) => {\r\n\r\n    return(\r\n        <div className='displayContainer' style={{gridTemplateColumns: `repeat(${columns}, 62px)`, gridTemplateRows: `repeat(${rows}, 62px)`}}>\r\n            <img className='displayBg' src = './images/file_extensions/displaybg.png' />\r\n           {terrains.map(({ index, type, visibility, potion, sword, shield, boss, bossType, player, iconSrc }) => {\r\n               return <MapTerrain\r\n               rows = {rows}\r\n               columns = {columns}\r\n               index = {index}\r\n               type = {type}\r\n               visibility = {visibility}\r\n               potion = {potion}\r\n               sword = {sword}\r\n               shield = {shield}\r\n               boss = {boss}\r\n               bossType = {bossType}\r\n               player = {player}\r\n               iconSrc = {iconSrc}\r\n               ></MapTerrain>\r\n           })}\r\n        </div>\r\n    );\r\n}","const baseExtension = `${process.env.PUBLIC_URL}/images/file_extensions/`;\r\n\r\nexport const getImageSrcFromType = (type: string = '', color?:number) => {\r\n    return `${baseExtension}${type}${color || 'default'}.png`;\r\n}","import React from 'react';\r\nimport './Matrix.css';\r\n\r\ninterface MatrixProps{\r\n    rows: number,\r\n    columns: number,\r\n    onMatrixClick: (index: number, type: string) => void;\r\n    type: string,\r\n}\r\n\r\nexport const Matrix: React.FC<MatrixProps> = ( { rows, columns, onMatrixClick, type } ) => {\r\n\r\n    var buttons = [];\r\n    \r\n    for (let i = 0; i < ( rows * columns); i++) {\r\n        var newButton = i;\r\n        buttons.push(newButton);\r\n    }\r\n     \r\n    return(\r\n        <div className='matrixButtonsContainer' style={{gridTemplateColumns: `repeat(${columns}, 25px)`, gridTemplateRows: `repeat(${rows}, 25px)`}}>\r\n            {buttons.map(function(currentValue) {\r\n                const handleClick = () => {\r\n                    onMatrixClick(currentValue, type);\r\n                } \r\n                return <button className='matrixButtons' onClick={handleClick} value={currentValue}></button>\r\n            })}\r\n        </div>\r\n    );\r\n} ","import React from 'react'\r\nimport { motion } from 'framer-motion';\r\nimport { getImageSrcFromType } from '../../utils/getImageSrcFromType';\r\nimport { Matrix } from '../Matrix/Matrix';\r\nimport './Map.css';\r\n\r\ninterface MapProps {\r\n    mapType: string,\r\n    rows: number,\r\n    columns: number,\r\n    onRowsDecrease: () => void;\r\n    onRowsIncrease: () => void;\r\n    onColumnDecrease: () => void;\r\n    onColumnIncrease: () => void;\r\n    onMatrixChange: () => void;\r\n    onVisibilityChange: (index: number) => void;\r\n    onTerrainTypeChange: (terrainType: number) => void;\r\n}\r\n\r\nexport const Map: React.FC<MapProps> = ( { mapType, rows, columns,  onRowsDecrease, onRowsIncrease, onColumnDecrease, onColumnIncrease, onMatrixChange, onVisibilityChange, onTerrainTypeChange } ) => {\r\n\r\n    const imageSrc = getImageSrcFromType(`${mapType}`);\r\n\r\n    const handleClick0 = () => {\r\n        onTerrainTypeChange(0);\r\n    } \r\n\r\n    const handleClick1 = () => {\r\n        onTerrainTypeChange(1);\r\n    } \r\n\r\n    const handleClick2 = () => {\r\n        onTerrainTypeChange(2);\r\n    } \r\n\r\n    const handleClick3 = () => {\r\n        onTerrainTypeChange(3);\r\n    } \r\n\r\n    return(\r\n        <div className='mainMapContainer'>\r\n            <div className='rowsColumnsNumberContainer'>\r\n                <div className='numbersContainer'>\r\n                    <div>Filas</div>\r\n                    <div className='numbersControl'>\r\n                        <motion.button \r\n                        whileHover={{ scale: 1.1 }}\r\n                        whileTap={{ scale: 0.9 }} \r\n                        onClick={onRowsDecrease} className='arrowBtn'>\r\n                            <img className='arrowBtnBg' src = \"./images/file_extensions/leftarrow.png\"/>\r\n                        </motion.button>\r\n                        <input type=\"text\" className='mapInput' value={rows} onChange={onMatrixChange}/>\r\n                        <motion.button \r\n                        whileHover={{ scale: 1.1 }}\r\n                        whileTap={{ scale: 0.9 }} \r\n                        onClick={onRowsIncrease} className='arrowBtn'>\r\n                            <img className='arrowBtnBg' src = \"./images/file_extensions/rightarrow.png\"/>\r\n                        </motion.button>\r\n                    </div>\r\n                </div>\r\n                <div className='numbersContainer'>\r\n                    <div>Columnas</div>\r\n                    <div className='numbersControl'>\r\n                        <motion.button \r\n                        whileHover={{ scale: 1.1 }}\r\n                        whileTap={{ scale: 0.9 }} \r\n                        onClick={onColumnDecrease} className='arrowBtn'>\r\n                            <img className='arrowBtnBg' src = \"./images/file_extensions/leftarrow.png\"/>\r\n                        </motion.button>\r\n                        <input type=\"text\" className='mapInput'value={columns}/>\r\n                        <motion.button \r\n                        whileHover={{ scale: 1.1 }}\r\n                        whileTap={{ scale: 0.9 }} \r\n                        onClick={onColumnIncrease} className='arrowBtn'>\r\n                            <img className='arrowBtnBg' src = \"./images/file_extensions/rightarrow.png\"/>\r\n                        </motion.button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>Cambiar visibilidad del terreno</p>\r\n                <Matrix \r\n                rows = {rows}\r\n                columns = {columns}\r\n                onMatrixClick = {onVisibilityChange}\r\n                type = ''\r\n                ></Matrix>\r\n            </div>\r\n            <div className='terrainStylesContainer'>\r\n                <motion.button \r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}  \r\n                onClick={handleClick0}\r\n                className='mapStyleBtn'>\r\n                    <img className='mapBtnBg' src = \"./images/file_extensions/terrain/greenterrain.png\"/>\r\n                </motion.button>\r\n                <motion.button \r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}  \r\n                onClick={handleClick1}\r\n                className='mapStyleBtn'>\r\n                    <img className='mapBtnBg' src = \"./images/file_extensions/terrain/blueterrain.png\"/>\r\n                </motion.button>\r\n                <motion.button \r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}  \r\n                onClick={handleClick2}\r\n                className='mapStyleBtn'>\r\n                    <img className='mapBtnBg' src = \"./images/file_extensions/terrain/redterrain.png\"/>\r\n                </motion.button>\r\n                <motion.button \r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}  \r\n                onClick={handleClick3}\r\n                className='mapStyleBtn'>\r\n                    <img className='mapBtnBg' src = \"./images/file_extensions/terrain/pinkterrain.png\"/>\r\n                </motion.button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Matrix } from '../Matrix/Matrix';\r\nimport { getImageSrcFromType } from '../../utils/getImageSrcFromType';\r\nimport './Boss.css';\r\n\r\ninterface BossProps{\r\n    bossType: string;\r\n    bossColor: number;\r\n    index: number;\r\n    rows: number,\r\n    columns: number,\r\n    onBossVisibilityChange: (index: number, type: string) => void;\r\n}\r\n\r\nexport const Boss: React.FC<BossProps> = ( { rows, columns, bossType, bossColor, index, onBossVisibilityChange} ) => {\r\n\r\n    const imageSrc = getImageSrcFromType(`${bossType}${bossColor}`);\r\n\r\n    return(\r\n    <div className='mainBossContainer'> \r\n        <div className = 'bossSettingsContainer'>\r\n            <motion.button \r\n            whileHover={{ scale: 1.1 }}\r\n            whileTap={{ scale: 0.9 }} \r\n            className = 'arrowBtn'>\r\n                <img className='arrowBtnBg' src = \"./images/file_extensions/leftarrow.png\"/>\r\n            </motion.button >\r\n                <div className = 'bossImgContainer'>\r\n                    <img className='bossImg' src = './images/file_extensions/characters/skeleton1.png' />\r\n                </div>\r\n            <motion.button  \r\n            whileHover={{ scale: 1.1 }}\r\n            whileTap={{ scale: 0.9 }} \r\n            className = 'arrowBtn'>\r\n                <img className='arrowBtnBg' src = \"./images/file_extensions/rightarrow.png\"/>\r\n            </motion.button >\r\n        </div>\r\n        <div></div>\r\n        <Matrix\r\n        rows = {rows}\r\n        columns = {columns}\r\n        onMatrixClick = {onBossVisibilityChange}\r\n        type = 'boss'\r\n        ></Matrix>\r\n    </div>);\r\n} \r\n","import React from 'react';\r\nimport { getImageSrcFromType } from '../../utils/getImageSrcFromType';\r\nimport { Matrix } from '../Matrix/Matrix';\r\nimport './ElementFeatures.css';\r\n\r\ninterface ElementFeaturesProps{\r\n    rows: number,\r\n    columns: number,\r\n    onElementVisibilityChange: (index: number, type: string) => void;\r\n    type: string,\r\n}\r\n\r\nexport const ElementFeatures: React.FC<ElementFeaturesProps> = ( { rows, columns, onElementVisibilityChange, type } ) => {\r\n\r\n    return(\r\n        <div className = 'elementFeaturesMainContainer'>\r\n            <div>\r\n                <p className = 'elementMatrixText'>Seleccionar en el mapa la posición del elemento</p>\r\n                <Matrix \r\n                rows = {rows}\r\n                columns = {columns}\r\n                onMatrixClick = {onElementVisibilityChange}\r\n                type = {type}\r\n                ></Matrix>\r\n            </div>\r\n        </div>\r\n    );\r\n} ","import React from 'react'\r\nimport { getImageSrcFromType } from '../../utils/getImageSrcFromType';\r\nimport { ElementFeatures } from '../ElementFeatures/ElementFeatures';\r\nimport { Route, Redirect, Link } from 'react-router-dom';\r\nimport './Elements.css';\r\n\r\ninterface ElementsProps{\r\n    rows: number,\r\n    columns: number,\r\n    potion: string,\r\n    shield: string,\r\n    sword: string,\r\n    onPotionVisibilityChange: (index: number, type: string) => void;\r\n    onShieldVisibilityChange: (index: number, type: string) => void;\r\n    onSwordVisibilityChange: (index: number, type: string) => void;\r\n}\r\n\r\nexport const Elements: React.FC<ElementsProps> = ( { rows, columns, potion, shield, sword, onPotionVisibilityChange, onShieldVisibilityChange, onSwordVisibilityChange } ) => {\r\n\r\n    const potionimageSrc = getImageSrcFromType(`${potion}`);\r\n    const shieldimageSrc = getImageSrcFromType(`${shield}`);\r\n    const swordimageSrc = getImageSrcFromType(`${sword}`);\r\n\r\n    const [ activeLink, setactiveLink ] = React.useState(1);\r\n\r\n    const handlePotion = () => {\r\n        setactiveLink(1);\r\n    }\r\n    const handleShield = () => {\r\n        setactiveLink(2);\r\n    }\r\n    const handleSword = () => {\r\n        setactiveLink(3);\r\n    }\r\n\r\n    return(\r\n        <div className='mainElementsContainer'>\r\n            <div className = 'elementsButtonsContainer'>\r\n                <Link onClick={handlePotion} to=\"/elements/potion\" className={`${(activeLink == 1) ? 'elementBtnSelected' : 'elementBtn'}`}>\r\n                    <img className='elementIcon' src = {potionimageSrc}/>\r\n                </Link>\r\n                <Link onClick={handleShield} to=\"/elements/shield\"className={`${(activeLink == 2) ? 'elementBtnSelected' : 'elementBtn'}`}>\r\n                    <img className='elementIcon' src = {shieldimageSrc}/>\r\n                </Link>\r\n                <Link onClick={handleSword} to=\"/elements/sword\" className={`${(activeLink == 3) ? 'elementBtnSelected' : 'elementBtn'}`}>\r\n                    <img className='elementIcon' src = {swordimageSrc}/>\r\n                </Link>\r\n            </div>\r\n            <Redirect from='/elements' exact to='/elements/potion'></Redirect>\r\n            <Route path='/elements/potion' render={() => \r\n                <div className='mapSettingsContainer'>\r\n                    <ElementFeatures\r\n                    rows = {rows}\r\n                    columns = {columns}\r\n                    onElementVisibilityChange = {onPotionVisibilityChange}\r\n                    type = 'potion'\r\n                    ></ElementFeatures>\r\n                </div>}>\r\n            </Route>\r\n            <Route path='/elements/shield' render={() => \r\n                <div className='mapSettingsContainer'>\r\n                    <ElementFeatures\r\n                    rows = {rows}\r\n                    columns = {columns}\r\n                    onElementVisibilityChange = {onShieldVisibilityChange}\r\n                    type = 'shield'\r\n                    ></ElementFeatures>\r\n                </div>}>\r\n            </Route>\r\n            <Route path='/elements/sword' render={() => \r\n                <div className='mapSettingsContainer'>\r\n                    <ElementFeatures\r\n                    rows = {rows}\r\n                    columns = {columns}\r\n                    onElementVisibilityChange = {onSwordVisibilityChange}\r\n                    type = 'sword'\r\n                    ></ElementFeatures>\r\n                </div>}>\r\n            </Route>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './Settings.css'\r\nimport { Link, Redirect, Route } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { Map } from '../../components/Map/Map';\r\nimport { Boss } from '../../components/Boss/Boss';\r\nimport { Elements } from '../../components/Elements/Elements';\r\n\r\ninterface SettingsProps{\r\n    rows: number,\r\n    columns: number,\r\n    onRowsDecrease: () => void;\r\n    onRowsIncrease: () => void;\r\n    onColumnDecrease: () => void;\r\n    onColumnIncrease: () => void;\r\n    onMatrixChange: () => void;\r\n    onVisibilityChange: (index: number) => void;\r\n    onBossVisibilityChange: (index: number, type: string) => void;\r\n    onPotionVisibilityChange: (index: number, type: string) => void;\r\n    onShieldVisibilityChange: (index: number, type: string) => void;\r\n    onSwordVisibilityChange: (index: number, type: string) => void;\r\n    onTerrainTypeChange: (terrainType: number) => void;\r\n}\r\n\r\nexport const Settings: React.FC<SettingsProps> = ( {rows, columns, onRowsDecrease, onRowsIncrease, onColumnDecrease, onColumnIncrease, onMatrixChange, onVisibilityChange, onBossVisibilityChange, onPotionVisibilityChange, onShieldVisibilityChange, onSwordVisibilityChange, onTerrainTypeChange } ) => {\r\n\r\n    const [ activeLink, setactiveLink ] = React.useState(1);\r\n\r\n    const handleTerrainBtn = () => {\r\n        setactiveLink(1);\r\n    }\r\n    const handleBossBtn = () => {\r\n        setactiveLink(2);\r\n    }\r\n    const handleElementBtn = () => {\r\n        setactiveLink(3);\r\n    }\r\n\r\n    return(\r\n        <div className='settingsContainer'>\r\n            <div className='settingsButtons'>\r\n                {/* <button className='btnOn enemyBtn'></button>\r\n                <button className='btnOff mapBtn'></button>\r\n                <button className='btnOff elementsBtn'></button> */}\r\n                <Link onClick={handleTerrainBtn} to=\"/map\" className={`${(activeLink == 1) ? 'btnOn' : 'btnOff'}`}>\r\n                    <img className='linkIcon' src = './images/file_extensions/terrainicon.png' />\r\n                </Link>\r\n                <Link onClick={handleBossBtn} to=\"/boss\" className={`${(activeLink == 2) ? 'btnOn' : 'btnOff'}`}>\r\n                    <img className='linkIcon' src = './images/file_extensions/bossicon.png' />\r\n                </Link>\r\n                <Link onClick={handleElementBtn} to=\"/elements\" className={`${(activeLink == 3) ? 'btnOn' : 'btnOff'}`}>\r\n                    <img className='linkIcon' src = './images/file_extensions/potionicon.png' />\r\n                </Link>\r\n            </div>\r\n            <div className='settingsMenu'>\r\n                <Redirect from='/' exact to='/map'></Redirect>\r\n                    <Route path='/map' render={() => \r\n                        <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        transition={{duration: 0.3}}\r\n                        className='mapSettingsContainer'>\r\n                            <Map \r\n                            mapType = {''}\r\n                            rows = {rows}\r\n                            columns = {columns}\r\n                            onRowsDecrease = {onRowsDecrease}\r\n                            onRowsIncrease = {onRowsIncrease}\r\n                            onColumnDecrease = {onColumnDecrease}\r\n                            onColumnIncrease = {onColumnIncrease}\r\n                            onMatrixChange = {onMatrixChange}\r\n                            onVisibilityChange = {onVisibilityChange}\r\n                            onTerrainTypeChange = {onTerrainTypeChange}\r\n                            ></Map>\r\n                        </motion.div>}>\r\n                    </Route>\r\n                    <Route path='/boss' render={() => \r\n                        <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        transition={{duration: 0.3}}className='bossSettingsContainer'>\r\n                            <Boss\r\n                            bossType = {''}\r\n                            bossColor = {0}\r\n                            index = {0}\r\n                            rows = {rows}\r\n                            columns = {columns}\r\n                            onBossVisibilityChange = {onBossVisibilityChange}\r\n                            ></Boss>\r\n                        </motion.div>}>\r\n                    </Route>\r\n                    <Route path='/elements' render={() => \r\n                        <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        transition={{duration: 0.3}}className='elementsSettingsContainer'>\r\n                           <Elements\r\n                           rows = {rows}\r\n                           columns = {columns}\r\n                           potion = {'potion'}\r\n                           shield = {'shield'}\r\n                           sword = {'sword'}\r\n                           onPotionVisibilityChange = {onPotionVisibilityChange}\r\n                           onShieldVisibilityChange = {onShieldVisibilityChange}\r\n                           onSwordVisibilityChange = {onSwordVisibilityChange}\r\n                           ></Elements>\r\n                        </motion.div>}>\r\n                    </Route>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Display } from '../../containers/Display/Display';\r\nimport { Settings } from '../../containers/Settings/Settings';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport './App.css'\r\nimport { getImageSrcFromType } from '../../utils/getImageSrcFromType';\r\n\r\nconst initialMap = [\r\n    {\r\n        index: 0,\r\n        type: 0,\r\n        visibility: true,\r\n        potion: false,\r\n        sword: false,\r\n        shield: false,\r\n        boss: false,\r\n        bossType: 0,\r\n        player: false,\r\n        iconSrc: '',\r\n    }\r\n];\r\n\r\nexport const App = () => {\r\n\r\n    const [ rows, setRows ] = React.useState(1);\r\n    const handleRowsDecrease = () => {\r\n        if(rows > 1){\r\n            setRows(rows-1);\r\n        }  \r\n    }\r\n    const handleRowsIncrease = () => {\r\n        if(rows < 6){\r\n            setRows(rows+1);\r\n        }  \r\n    }\r\n\r\n    const [ columns, setColumns ] = React.useState(1);\r\n    const handleColumnsDecrease = () => {\r\n        if(columns > 1){\r\n            setColumns(columns-1);\r\n        }  \r\n    }\r\n    const handleColumnsIncrease = () => {\r\n        if(columns < 11){\r\n            setColumns(columns+1);\r\n        }  \r\n    }\r\n\r\n    const [ terrains, setTerrains ] = React.useState(initialMap);\r\n    const [ globalTerrainType, setglobalTerrainType ] = React.useState(0);\r\n\r\n    const handleVisibilityChange = (index: number) => {\r\n        const i = terrains.findIndex((terrain) => {\r\n            return terrain.index === index;\r\n        });\r\n        const currentMap = terrains.slice();\r\n        currentMap[i].visibility = !currentMap[i].visibility;\r\n        currentMap[i].potion = false;\r\n        currentMap[i].sword = false;\r\n        currentMap[i].shield = false;\r\n        currentMap[i].boss = false;\r\n        setTerrains(currentMap);\r\n    }\r\n\r\n    const handleTerrainTypeChange = (numberType: number) => {\r\n        setglobalTerrainType(numberType);\r\n        const currentMap = terrains.slice();\r\n        for (let i = 0; i < currentMap.length; i++) {\r\n            currentMap[i].type = numberType;\r\n        }\r\n        setTerrains(currentMap);\r\n    }\r\n\r\n    const handleOnMatrixChange = () => {\r\n        /*const temporalTerrain = terrains.slice();\r\n        var terrainsNumber = rows * columns;\r\n        var terrainsNumberDifference = 0;\r\n        var increase = false\r\n        if (temporalTerrain.length > terrainsNumber) {\r\n           terrainsNumberDifference = temporalTerrain.length - terrainsNumber;\r\n           console.log(\"resta\"+terrainsNumberDifference);\r\n        }else{\r\n            terrainsNumberDifference = terrainsNumber - temporalTerrain.length;\r\n            console.log(\"suma\"+terrainsNumberDifference);\r\n            increase = true;\r\n        }\r\n        for (let i = 0; i < terrainsNumberDifference; i++) {\r\n            if (increase) {\r\n                const newTerrain = {\r\n                index: temporalTerrain.length,\r\n                type: '',\r\n                visibility: true,\r\n                potion: false,\r\n                sword: false,\r\n                shield: false,\r\n                boss: false,\r\n                bossType: 0,\r\n                player: false,\r\n                iconSrc: '',\r\n                };\r\n                temporalTerrain.push(newTerrain);    \r\n            }else{\r\n                temporalTerrain.pop();\r\n            } \r\n        }\r\n            */\r\n        var temporalTerrain = [];\r\n        var indexTerrain = 0;\r\n        for (let i = 0; i < (rows * columns); i++) {\r\n            const newTerrain = {\r\n            index: indexTerrain,\r\n            type: globalTerrainType,\r\n            visibility: true,\r\n            potion: false,\r\n            sword: false,\r\n            shield: false,\r\n            boss: false,\r\n            bossType: 0,\r\n            player: false,\r\n            iconSrc: '',\r\n            }; \r\n            indexTerrain ++;\r\n            temporalTerrain.push(newTerrain);\r\n        }\r\n        setTerrains(temporalTerrain);\r\n    }\r\n\r\n    const handleOnMatrixColumnsChange = () => {\r\n        const temporalTerrain = terrains.slice();\r\n        var terrainsNumber = rows * columns;\r\n        var terrainsNumberDifference = 0;\r\n        var increase = false\r\n        if (temporalTerrain.length > terrainsNumber) {\r\n           terrainsNumberDifference = temporalTerrain.length - terrainsNumber;\r\n        }else{\r\n            terrainsNumberDifference = terrainsNumber - temporalTerrain.length;\r\n            increase = true;\r\n        }\r\n\r\n        for (let i = 0; i < columns; i++) {\r\n            if (increase) {\r\n                const newTerrain = {\r\n                index: 0,\r\n                type: 0,\r\n                visibility: true,\r\n                potion: false,\r\n                sword: false,\r\n                shield: false,\r\n                boss: false,\r\n                bossType: 0,\r\n                player: false,\r\n                iconSrc: '',\r\n                };\r\n                var terrainCopy = temporalTerrain.slice();\r\n                temporalTerrain.push(newTerrain);    \r\n            }else{\r\n                temporalTerrain.pop();\r\n            } \r\n        }\r\n        setTerrains(temporalTerrain);\r\n    }\r\n\r\n    const handleOnMatrixRowsChange = () => {\r\n\r\n    }\r\n\r\n    const handleOnBossVisibilityChange = (index: number, type: string) => {\r\n        const i = terrains.findIndex((terrain) => {\r\n            return terrain.index === index;\r\n        });\r\n        const currentMap = terrains.slice();\r\n\r\n        if(!currentMap[i].potion && !currentMap[i].shield && !currentMap[i].sword){\r\n            currentMap[i].boss = !currentMap[i].boss;\r\n        }\r\n\r\n        for (let j = 0; j < currentMap.length; j++) {\r\n            if (currentMap[j].boss == true &&  (i != j) && \r\n            (!currentMap[i].potion || !currentMap[i].shield || !currentMap[i].sword)) {\r\n                currentMap[j].boss = false;\r\n            }\r\n        }\r\n\r\n        setTerrains(currentMap);\r\n\r\n        handleIconChange(index, type);\r\n    }\r\n\r\n    const handleOnPotionVisibilityChange = (index: number, type: string) => {\r\n        const i = terrains.findIndex((terrain) => {\r\n            return terrain.index === index;\r\n        });\r\n        const currentMap = terrains.slice();\r\n\r\n        if(!currentMap[i].boss && !currentMap[i].shield && !currentMap[i].sword){\r\n            currentMap[i].potion = !currentMap[i].potion;\r\n        }\r\n\r\n        for (let j = 0; j < currentMap.length; j++) {\r\n            if (currentMap[j].potion == true &&  (i != j) && \r\n            (!currentMap[i].boss || !currentMap[i].sword || !currentMap[i].shield)) {\r\n                currentMap[j].potion = false;\r\n            }\r\n        }\r\n    \r\n        setTerrains(currentMap);\r\n\r\n        handleIconChange(index, type);\r\n    }\r\n\r\n    const handleOnShieldVisibilityChange = (index: number, type: string) => {\r\n        const i = terrains.findIndex((terrain) => {\r\n            return terrain.index === index;\r\n        });\r\n        const currentMap = terrains.slice();\r\n\r\n        if(!currentMap[i].boss && !currentMap[i].potion && !currentMap[i].sword){        \r\n            currentMap[i].shield = !currentMap[i].shield;\r\n        }\r\n\r\n        for (let j = 0; j < currentMap.length; j++) {\r\n            if (currentMap[j].shield == true &&  (i != j) && \r\n            (!currentMap[i].boss || !currentMap[i].potion || !currentMap[i].sword)) {\r\n                currentMap[j].shield = false;\r\n            }\r\n        }\r\n\r\n        setTerrains(currentMap);\r\n\r\n        handleIconChange(index, type);\r\n    }\r\n\r\n    const handleOnSwordVisibilityChange = (index: number, type: string) => {\r\n        const i = terrains.findIndex((terrain) => {\r\n            return terrain.index === index;\r\n        });\r\n        const currentMap = terrains.slice();\r\n\r\n        if(!currentMap[i].boss && !currentMap[i].potion && !currentMap[i].shield){        \r\n            currentMap[i].sword = !currentMap[i].sword;\r\n        }\r\n\r\n        for (let j = 0; j < currentMap.length; j++) {\r\n            if (currentMap[j].sword == true &&  (i != j) && \r\n            (!currentMap[i].boss || !currentMap[i].potion || !currentMap[i].shield)) {\r\n                currentMap[j].sword = false;\r\n            }\r\n        }\r\n        \r\n        setTerrains(currentMap);\r\n\r\n        handleIconChange(index, type);\r\n    }\r\n\r\n    \r\n    const handleIconChange = (index:number, type: string) => {\r\n        const i = terrains.findIndex((terrain) => {\r\n            return terrain.index === index;\r\n        });\r\n        const currentMap = terrains.slice();\r\n\r\n        if(currentMap[i].iconSrc == ''){\r\n            currentMap[i].iconSrc = getImageSrcFromType(type);\r\n            for (let j = 0; j < currentMap.length; j++) {\r\n                if (currentMap[j].iconSrc == getImageSrcFromType(type) && i != j) {\r\n                    currentMap[j].iconSrc = '';\r\n                }\r\n            }\r\n        }else if(currentMap[i].iconSrc == getImageSrcFromType(type)){\r\n            currentMap[i].iconSrc = '';\r\n        }else if(currentMap[i].iconSrc != '' && currentMap[i].iconSrc != getImageSrcFromType(type)){\r\n\r\n        }   \r\n\r\n        setTerrains(currentMap);\r\n    }\r\n\r\n    const restartElementsVisibility = () => {\r\n        const currentMap = terrains.slice();\r\n        for (let j = 0; j < currentMap.length; j++) {\r\n            currentMap[j].potion = false;\r\n            currentMap[j].sword = false;\r\n            currentMap[j].shield = false;\r\n            currentMap[j].boss = false;\r\n        }\r\n        setTerrains(currentMap);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        handleOnMatrixChange();\r\n    }, [ columns, rows ]);\r\n\r\n    return(\r\n        <AnimatePresence exitBeforeEnter initial={false}>\r\n            <img className='displayMainBg' src = './images/file_extensions/mainbg.png' />\r\n            <main className='appMainContainer'>\r\n                <p className='appTittle'>Knights fight</p>\r\n                <main className='appContainer'>\r\n                    <HashRouter basename={process.env.PUBLIC_URL}>\r\n                    <Display\r\n                    rows = {rows}\r\n                    columns = {columns}\r\n                    terrains = {terrains}\r\n                    ></Display>\r\n                    <Settings\r\n                    rows = {rows}\r\n                    columns = {columns}\r\n                    onRowsDecrease = {handleRowsDecrease}\r\n                    onRowsIncrease = {handleRowsIncrease}\r\n                    onColumnDecrease = {handleColumnsDecrease}\r\n                    onColumnIncrease = {handleColumnsIncrease}\r\n                    onMatrixChange = {handleOnMatrixChange}\r\n                    onVisibilityChange = {handleVisibilityChange}\r\n                    onBossVisibilityChange = {handleOnBossVisibilityChange}\r\n                    onPotionVisibilityChange = {handleOnPotionVisibilityChange}\r\n                    onShieldVisibilityChange = {handleOnShieldVisibilityChange}\r\n                    onSwordVisibilityChange = {handleOnSwordVisibilityChange}\r\n                    onTerrainTypeChange = {handleTerrainTypeChange}\r\n                    ></Settings>\r\n                    </HashRouter>\r\n                </main>\r\n            </main> \r\n        </AnimatePresence>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/pixeldigivolve.dfd41671.otf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './containers/App/App';\nimport './fonts/pixeldigivolve/pixeldigivolve.otf';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}